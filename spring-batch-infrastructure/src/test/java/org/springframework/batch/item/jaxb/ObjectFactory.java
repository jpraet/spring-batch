//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.09.20 at 09:46:28 AM CEST 
//


package org.springframework.batch.item.jaxb;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the be.fgov.kszbcss.batch.jaxb package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Master_QNAME = new QName("http://www.springframework.org/test", "master");
    private final static QName _Detail_QNAME = new QName("http://www.springframework.org/test", "detail");
    private final static QName _Root_QNAME = new QName("http://www.springframework.org/test", "root");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: be.fgov.kszbcss.batch.jaxb
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link RootType }
     * 
     */
    public RootType createRootType() {
        return new RootType();
    }

    /**
     * Create an instance of {@link DetailsType }
     * 
     */
    public DetailsType createDetailsType() {
        return new DetailsType();
    }

    /**
     * Create an instance of {@link DetailType }
     * 
     */
    public DetailType createDetailType() {
        return new DetailType();
    }

    /**
     * Create an instance of {@link MasterType }
     * 
     */
    public MasterType createMasterType() {
        return new MasterType();
    }

    /**
     * Create an instance of {@link MastersType }
     * 
     */
    public MastersType createMastersType() {
        return new MastersType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MasterType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.springframework.org/test", name = "master")
    public JAXBElement<MasterType> createMaster(MasterType value) {
        return new JAXBElement<MasterType>(_Master_QNAME, MasterType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DetailType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.springframework.org/test", name = "detail")
    public JAXBElement<DetailType> createDetail(DetailType value) {
        return new JAXBElement<DetailType>(_Detail_QNAME, DetailType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RootType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.springframework.org/test", name = "root")
    public JAXBElement<RootType> createRoot(RootType value) {
        return new JAXBElement<RootType>(_Root_QNAME, RootType.class, null, value);
    }

}
